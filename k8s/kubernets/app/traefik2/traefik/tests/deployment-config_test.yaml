suite: Deployment configuration
templates:
  - deployment.yaml
tests:
  - it: should have 1 replica by default
    asserts:
      - equal:
          path: spec.replicas
          value: 1
  - it: should have the specified amount of replicas when specified via values
    set:
      deployment:
        replicas: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3
  - it: should have revisionHistoryLimit with specified value
    set:
      deployment:
        revisionHistoryLimit: 1
    asserts:
      - equal:
          path: spec.revisionHistoryLimit
          value: 1
  - it: should have a rollingUpdate strategy with default values
    asserts:
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
      - equal:
          path: spec.strategy.rollingUpdate.maxUnavailable
          value: 0
      - equal:
          path: spec.strategy.rollingUpdate.maxSurge
          value: 1
  - it: should have a custom merged rollingUpdate strategy with specified values
    set:
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 4
          vegetaForce: 9000
    asserts:
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
      - equal:
          path: spec.strategy.rollingUpdate.maxUnavailable
          value: 4
      - equal:
          path: spec.strategy.rollingUpdate.maxSurge
          value: 1
      - equal:
          path: spec.strategy.rollingUpdate.vegetaForce
          value: 9000
  - it: should have annotations with specified values
    set:
      deployment:
        annotations:
          traefik/powpow: annotations
        podAnnotations:
          traefik/powpow: podAnnotations
    asserts:
      - equal:
          path: metadata.annotations.traefik/powpow
          value: annotations
      - equal:
          path: spec.template.metadata.annotations.traefik/powpow
          value: podAnnotations
  - it: should have labels with specified values
    set:
      deployment:
        labels:
          traefik/powpow: labels
        podLabels:
          traefik/powpow: podLabels
    asserts:
      - equal:
          path: metadata.labels.traefik/powpow
          value: labels
      - equal:
          path: spec.template.metadata.labels.traefik/powpow
          value: podLabels
  - it: should have minReadySeconds with specified value
    set:
      deployment:
        minReadySeconds: 30
    asserts:
      - equal:
          path: spec.minReadySeconds
          value: 30
  - it: should have a preStop hook with specified values
    set:
      deployment:
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 40"]
    asserts:
      - equal:
          path: spec.template.spec.containers[0].lifecycle.preStop.exec.command
          value: ["/bin/sh", "-c", "sleep 40"]
  - it: should have a postStart hook with specified values
    set:
      deployment:
        lifecycle:
          postStart:
            httpGet:
              path: /ping
              port: 9000
              host: localhost
              scheme: HTTP
    asserts:
      - equal:
          path: spec.template.spec.containers[0].lifecycle.postStart.httpGet.path
          value: /ping
      - equal:
          path: spec.template.spec.containers[0].lifecycle.postStart.httpGet.port
          value: 9000
      - equal:
          path: spec.template.spec.containers[0].lifecycle.postStart.httpGet.host
          value: localhost
      - equal:
          path: spec.template.spec.containers[0].lifecycle.postStart.httpGet.scheme
          value: HTTP
  - it: should have affinity with specified value
    values:
      - ./values/antiaffinity.yaml
    asserts:
      - equal:
          path: spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey
          value: kubernetes.io/hostname
  - it: should have an OnDelete strategy when set
    set:
      updateStrategy:
        type: OnDelete
    asserts:
      - equal:
          path: spec.strategy.type
          value: OnDelete
  - it: should use helm managed namespace as default behavior
    asserts:
      - equal:
          path: metadata.namespace
          value: NAMESPACE
  - it: should accept overridden namespace
    set:
      namespaceOverride: "traefik-ns-override"
    asserts:
      - equal:
          path: metadata.namespace
          value: "traefik-ns-override"
