apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: jenkins
  labels:
    k8s-app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: jenkins
  template:
    metadata:
      labels:
        k8s-app: jenkins
    spec:
      imagePullSecrets:
        - name: aliyun-docker-repo
      containers:
      - name: jenkins
        #image: jenkins/jenkins
        image: registry.cn-beijing.aliyuncs.com/lucklrj/jenkins:with_php
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
        - name: docker-sock
          mountPath: /var/run/docker.sock
        - name: docker-cmd
          mountPath: /usr/bin/docker
        - name: kubectl-cmd
          mountPath: /usr/bin/kubectl
        - name: kubectl-config
          mountPath: /root/.kube/config
        ports:
        - containerPort: 8080 
          name: web
        - containerPort: 50000
          name: agent
      volumes:
        - name: jenkins-home
          hostPath:
            path: /k8s_data/jenkins_home
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
        - name: docker-cmd
          hostPath:
            path: /usr/bin/docker
        - name: kubectl-cmd
          hostPath:
            path: /usr/bin/kubectl
        - name: kubectl-config
          hostPath:
            path: /k8s_data/.kube/config
---
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: jenkins
  name: jenkins
spec:
  type: NodePort
  ports:
    - port: 80
      name: web
      targetPort: 8080
    - port: 50000
      name: agent
      targetPort: 50000
  selector:
    k8s-app: jenkins
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: jenkins.hi-coffice.com
    http:
      paths:
      - backend:
          serviceName: jenkins
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: PodSecurityPolicy
metadata:
  name: permissive
spec:
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
  - '*'

